// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Scalection.Data.EF.Migrations
{
    [DbContext(typeof(ScalectionContext))]
    partial class ScalectionContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Scalection.ApiService.Models.Candidate", b =>
                {
                    b.Property<Guid>("CandidateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("PartyId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("CandidateId");

                    b.HasIndex("PartyId");

                    b.ToTable("Candidates");
                });

            modelBuilder.Entity("Scalection.ApiService.Models.Election", b =>
                {
                    b.Property<Guid>("ElectionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ElectionId");

                    b.ToTable("Elections");
                });

            modelBuilder.Entity("Scalection.ApiService.Models.ElectionDistrict", b =>
                {
                    b.Property<Guid>("ElectionDistrictId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ElectionId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ElectionDistrictId");

                    b.HasIndex("ElectionId");

                    b.ToTable("ElectionDistrict");
                });

            modelBuilder.Entity("Scalection.ApiService.Models.Party", b =>
                {
                    b.Property<Guid>("PartyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ElectionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PartyId");

                    b.HasIndex("ElectionId");

                    b.ToTable("Parties");
                });

            modelBuilder.Entity("Scalection.ApiService.Models.Vote", b =>
                {
                    b.Property<Guid>("VoteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CandidateId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ElectionDistrictId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PartyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime2");

                    b.HasKey("VoteId");

                    b.HasIndex("CandidateId");

                    b.HasIndex("ElectionDistrictId");

                    b.HasIndex("PartyId");

                    b.ToTable("Vote");
                });

            modelBuilder.Entity("Scalection.ApiService.Models.Voter", b =>
                {
                    b.Property<long>("VoterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("VoterId"));

                    b.Property<Guid>("ElectionDistrictId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Voted")
                        .HasColumnType("bit");

                    b.HasKey("VoterId");

                    b.HasIndex("ElectionDistrictId");

                    b.ToTable("Voter");
                });

            modelBuilder.Entity("Scalection.ApiService.Models.Candidate", b =>
                {
                    b.HasOne("Scalection.ApiService.Models.Party", null)
                        .WithMany("Candidates")
                        .HasForeignKey("PartyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Scalection.ApiService.Models.ElectionDistrict", b =>
                {
                    b.HasOne("Scalection.ApiService.Models.Election", null)
                        .WithMany()
                        .HasForeignKey("ElectionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Scalection.ApiService.Models.Party", b =>
                {
                    b.HasOne("Scalection.ApiService.Models.Election", "Election")
                        .WithMany()
                        .HasForeignKey("ElectionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Election");
                });

            modelBuilder.Entity("Scalection.ApiService.Models.Vote", b =>
                {
                    b.HasOne("Scalection.ApiService.Models.Candidate", null)
                        .WithMany()
                        .HasForeignKey("CandidateId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Scalection.ApiService.Models.ElectionDistrict", null)
                        .WithMany()
                        .HasForeignKey("ElectionDistrictId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Scalection.ApiService.Models.Party", null)
                        .WithMany()
                        .HasForeignKey("PartyId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Scalection.ApiService.Models.Voter", b =>
                {
                    b.HasOne("Scalection.ApiService.Models.ElectionDistrict", null)
                        .WithMany()
                        .HasForeignKey("ElectionDistrictId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Scalection.ApiService.Models.Party", b =>
                {
                    b.Navigation("Candidates");
                });
#pragma warning restore 612, 618
        }
    }
}
